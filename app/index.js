// Generated by CoffeeScript 1.6.3
(function() {
  var User, express, http, keys, mongoose, nib, stylus, twitter, _;

  express = require('express');

  stylus = require('stylus');

  nib = require('nib');

  mongoose = require('mongoose');

  User = require("../models/user");

  twitter = require("ntwitter");

  keys = require("../config/keys");

  http = require('http');

  _ = require('underscore');

  module.exports = function(socket) {
    var app, changeTrack, track, twit;
    app = express();
    app.use(express.cookieSession({
      secret: "doyouwannaknowmysecret?"
    }));
    app.use(app.router);
    app.set("views", __dirname + "/views");
    app.use(express["static"](__dirname + "/../public"));
    twit = new twitter(keys);
    track = "wimbledon";
    changeTrack = function(_track, client) {
      return twit.stream("statuses/filter", {
        track: _track
      }, function(stream) {
        stream.on("data", function(data) {
          return client.emit("message", data);
        });
        return stream.on("destroy", function(response) {
          return console.log("Destroying stream...");
        });
      });
    };
    socket.on("connection", function(client) {
      console.log("Connected!");
      changeTrack(track, client);
      return client.on("change_track", function(_track) {
        track = _track.track;
        console.log("Using track(s): ", track);
        return changeTrack(track, client);
      });
    });
    return app.get('/', function(req, res, next) {
      var userId, _ref;
      userId = (_ref = req.session.passport) != null ? _ref.user : void 0;
      if (userId) {
        return User.findOne({
          id_str: userId
        }, function(err, user) {
          return res.render("index", user);
        });
      } else {
        return res.render("index", {});
      }
    });
  };

}).call(this);
